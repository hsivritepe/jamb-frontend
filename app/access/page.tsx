"use client";

import { useState } from "react";

export default function AccessPage() {
  const [code, setCode] = useState("");
  const [message, setMessage] = useState("");

  function handleSubmit() {
    // Our "secret" code is "2025"
    if (code === "2025") {
      // Show a short success message
      setMessage("Access code accepted! Redirecting...");

      // Set cookie 'hasAccess=true' for 1 day (86400 seconds)
      document.cookie = "hasAccess=true; path=/; max-age=86400";

      // Redirect to homepage after a brief delay (optional)
      setTimeout(() => {
        window.location.href = "/";
      }, 1500);
    } else {
      setMessage("Invalid access code. Please try again.");
    }
  }

  return (
    <main className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-r from-blue-50 to-blue-100 p-4">
      {/* Logo with subtle transformation on hover */}
      <div className="mb-8 transform transition-transform duration-300 hover:scale-105 cursor-pointer">
        <svg
          width="130"
          height="39"
          viewBox="0 0 130 39"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M105.474 0.541992L130 0.541992V24.2612L124.04 23.6554L126.157 4.25849L106.1 6.30595L105.474 0.541992Z"
            fill="#1948F0"
          />
          <path
            d="M0 26.0839H4.45966V27.1787C4.45966 29.5011 5.01998 31.3147 6.14062 32.6197C7.26125 33.9025 9.07942 34.5439 11.5951 34.5439C14.1108 34.5439 15.929 33.9136 17.0496 32.6529C18.1931 31.3922 18.7649 29.6559 18.7649 27.4441V12.4574H23.2932V27.61C23.2932 29.9987 22.8015 32.0004 21.8181 33.615C20.8346 35.2296 19.4624 36.4461 17.7014 37.2644C15.9404 38.0607 13.905 38.4588 11.5951 38.4588C9.30812 38.4588 7.28412 38.0496 5.52312 37.2313C3.785 36.4129 2.42423 35.1854 1.44081 33.5486C0.480271 31.9119 0 29.8771 0 27.4441V26.0839Z"
            fill="#171717"
          />
          <path
            d="M46.0884 37.9943L45.3337 31.0272L46.2256 28.6053L45.3337 26.2166L46.0884 19.2163H50.6853L49.6561 28.6053L50.6853 37.9943H46.0884ZM47.4606 28.6053C47.0261 30.5738 46.3057 32.299 45.2994 33.7809C44.2931 35.2628 43.0467 36.4129 41.5601 37.2313C40.0964 38.0496 38.4612 38.4588 36.6545 38.4588C34.7563 38.4588 33.0753 38.0496 31.6116 37.2313C30.1479 36.3908 29.0044 35.2296 28.1811 33.7477C27.3578 32.2658 26.9461 30.5517 26.9461 28.6053C26.9461 26.6368 27.3578 24.9227 28.1811 23.4629C29.0044 21.981 30.1479 20.8309 31.6116 20.0125C33.0753 19.1721 34.7563 18.7518 36.6545 18.7518C38.4612 18.7518 40.0964 19.161 41.5601 19.9794C43.0467 20.7977 44.2931 21.9478 45.2994 23.4297C46.3285 24.8895 47.0489 26.6147 47.4606 28.6053ZM31.4744 28.6053C31.4744 29.866 31.7374 30.983 32.2634 31.9562C32.8123 32.9072 33.5556 33.6592 34.4933 34.2122C35.4309 34.743 36.5058 35.0084 37.7179 35.0084C38.9529 35.0084 40.0964 34.743 41.1484 34.2122C42.2005 33.6592 43.1267 32.9072 43.9272 31.9562C44.7505 30.983 45.4023 29.866 45.8826 28.6053C45.4023 27.3446 44.7505 26.2387 43.9272 25.2876C43.1267 24.3145 42.2005 23.5624 41.1484 23.0316C40.0964 22.4787 38.9529 22.2022 37.7179 22.2022C36.5058 22.2022 35.4309 22.4787 34.4933 23.0316C33.5556 23.5624 32.8123 24.3145 32.2634 25.2876C31.7374 26.2387 31.4744 27.3446 31.4744 28.6053Z"
            fill="#171717"
          />
          <path
            d="M54.0509 19.2163H58.5106L59.677 25.9844V37.9943H55.2173V25.354L54.0509 19.2163ZM66.8467 18.7518C68.562 18.7518 70.0142 19.1057 71.2035 19.8135C72.4156 20.5212 73.3304 21.5387 73.9479 22.8657C74.5883 24.1707 74.9084 25.7521 74.9084 27.61V37.9943H70.4488V28.3067C70.4488 26.3382 70.0142 24.8563 69.1452 23.861C68.299 22.8436 67.0526 22.3349 65.4059 22.3349C64.2395 22.3349 63.2218 22.6114 62.3528 23.1643C61.5066 23.6952 60.8433 24.4472 60.3631 25.4203C59.9057 26.3935 59.677 27.5326 59.677 28.8375L58.0989 28.0081C58.3048 26.0618 58.7965 24.4029 59.5741 23.0316C60.3745 21.6603 61.3922 20.6097 62.6272 19.8798C63.8851 19.1278 65.2916 18.7518 66.8467 18.7518ZM82.0439 18.7518C83.7592 18.7518 85.2228 19.1057 86.435 19.8135C87.6471 20.5212 88.5619 21.5387 89.1794 22.8657C89.8197 24.1707 90.1399 25.7521 90.1399 27.61V37.9943H85.6802V28.3067C85.6802 26.3382 85.2457 24.8563 84.3766 23.861C83.5305 22.8436 82.284 22.3349 80.6374 22.3349C79.471 22.3349 78.4533 22.6114 77.5842 23.1643C76.738 23.6952 76.0748 24.4472 75.5945 25.4203C75.1371 26.3935 74.9084 27.5326 74.9084 28.8375L73.3304 28.0081C73.5362 26.0618 74.0279 24.4029 74.8055 23.0316C75.606 21.6603 76.6237 20.6097 77.8587 19.8798C79.1165 19.1278 80.5116 18.7518 82.0439 18.7518Z"
            fill="#171717"
          />
          <path
            d="M94.6089 12.4482H99.0686V25.6858L98.3825 26.9133V30.3969L99.0686 31.7903V37.9943H94.6089V12.4482ZM97.2848 28.6053C97.7193 26.6147 98.4397 24.8895 99.446 23.4297C100.452 21.9478 101.687 20.7977 103.151 19.9794C104.637 19.161 106.284 18.7518 108.091 18.7518C109.989 18.7518 111.67 19.1721 113.134 20.0125C114.597 20.8309 115.741 21.981 116.564 23.4629C117.388 24.9227 117.799 26.6368 117.799 28.6053C117.799 30.5517 117.388 32.2658 116.564 33.7477C115.741 35.2296 114.597 36.3908 113.134 37.2313C111.67 38.0496 109.989 38.4588 108.091 38.4588C106.284 38.4588 104.637 38.0496 103.151 37.2313C101.687 36.4129 100.452 35.2628 99.446 33.7809C98.4397 32.299 97.7193 30.5738 97.2848 28.6053ZM113.271 28.6053C113.271 27.3446 112.997 26.2387 112.448 25.2876C111.922 24.3145 111.19 23.5624 110.252 23.0316C109.314 22.4787 108.24 22.2022 107.027 22.2022C105.815 22.2022 104.672 22.4787 103.597 23.0316C102.545 23.5624 101.619 24.3145 100.818 25.2876C100.018 26.2387 99.3659 27.3446 98.8628 28.6053C99.3659 29.866 100.018 30.983 100.818 31.9562C101.619 32.9072 102.545 33.6592 103.597 34.2122C104.672 34.743 105.815 35.0084 107.027 35.0084C108.24 35.0084 109.314 34.743 110.252 34.2122C111.19 33.6592 111.922 32.9072 112.448 31.9562C112.997 30.983 113.271 29.866 113.271 28.6053Z"
            fill="#171717"
          />
        </svg>
      </div>

      {/* Access form */}
      <div className="max-w-md w-full bg-white p-6 rounded-lg shadow-lg">
        <h1 className="text-2xl font-semibold mb-4 text-gray-800">
          Please enter the access code
        </h1>
        <input
          type="text"
          value={code}
          onChange={(e) => setCode(e.target.value)}
          placeholder="Enter code"
          className="w-full border px-3 py-2 mb-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <button
          onClick={handleSubmit}
          className="w-full bg-blue-600 text-white font-medium py-2 rounded hover:bg-blue-700 transition-colors"
        >
          Submit
        </button>

        {/* Message area */}
        {message && (
          <p className="text-center mt-4 text-gray-600 font-medium">
            {message}
          </p>
        )}
      </div>
    </main>
  );
}